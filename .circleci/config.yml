defaults: &defaults
  environment:
    CC_TEST_REPORTER_ID: 882e4559af101c9bb42fdba22f494e398f00dd293242978e8f97aea7fbf20ce4
  docker:
    - image: circleci/node:carbon
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: opeoluwaiyi-kuyoro
        POSTGRES_DB: portfolio-test
  working_directory: ~/repo

cmd_attache_working_dir: &cmd_attache_working_dir
  attach_workspace:
    at: ~/repo

cmd_restore_cache: &cmd_restore_cache
  restore_cache:
    keys:
      - v1-dependencies-{{ checksum "package.json" }}
      - v1-dependencies-

cmd_save_cache: &cmd_save_cache
  save_cache:
    paths:
      - node_modules
    key: v1-dependencies-{{ checksum "package.json" }}

cmd_install_packages: &cmd_install_packages
  run:
    name: Install dependencies
    command: npm install

persist_workspace: &persist_workspace
  persist_to_workspace:
    root: .
    paths: .

filters: &filters
  filters:
    branches:
      only:
        - develop
        - master

version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - *cmd_restore_cache
      - *cmd_install_packages
      - *cmd_save_cache
      - *persist_workspace

  cc_reported:
    <<: *defaults
    steps:
      - *cmd_attache_working_dir
      - *cmd_install_packages
      # Setup code climate
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - *persist_workspace

  test:
    <<: *defaults
    steps:
      - *cmd_attache_working_dir
      - *cmd_install_packages
      # run tests and post coverage to cc
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            npm test
            ./cc-test-reporter after-build --exit-code $?
      - *persist_workspace

  build:
    <<: *defaults
    steps:
      - *cmd_attache_working_dir
      - *cmd_install_packages
      # Build the app
      - run:
          name: Build the app
          command: npm run build
      - *persist_workspace

  migrate_db:
    machine: true
    steps:
      - *cmd_attache_working_dir
      - checkout
      - *cmd_install_packages
      - run:
          name: migrate_DB
          command: |
            chmod u+x scripts/migrate_database.sh
            scripts/migrate_database.sh

  dock_and_deploy:
    machine: true
    steps:
      - *cmd_attache_working_dir
      - checkout
      - run:
          name: deploy
          command: |
            chmod u+x scripts/heroku_deployment.sh
            scripts/heroku_deployment.sh

workflows:
  version: 2
  test_deploy:
    jobs:
      - checkout_code
      - cc_reported:
          requires:
            - checkout_code
      - test:
          requires:
            - checkout_code
            - cc_reported
      - build:
          requires:
            - checkout_code
            - test
      - migrate_db:
          requires:
            - checkout_code
            - test
          <<: *filters
      - dock_and_deploy:
          type: approval
          requires:
            - checkout_code
            - test
            - build
            - migrate_db
          <<: *filters
